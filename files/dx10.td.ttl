
@prefix cdt: <https://w3id.org/cdt/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix hctl: <https://www.w3.org/2019/wot/hypermedia#> .
@prefix http: <http://www.w3.org/2011/http#> .
@prefix jsonschema: <https://www.w3.org/2019/wot/json-schema#> .
@prefix onto: <https://ci.mines-stetienne.fr/kg/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix s4syst: <https://saref.etsi.org/saref4syst/> .
@prefix schema: <http://schema.org/> .
@prefix siren: <http://rdf.insee.fr/siren/> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix td: <https://www.w3.org/2019/wot/td#> .
@prefix wotsec: <https://www.w3.org/2019/wot/security#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<https://ci.mines-stetienne.fr/kg/itmfactory/dx10#this>
    a td:Thing ;
    # Thing metadata
    dct:title "fillingWorkshop" ;
    dct:description "DX10 filling workshop with a Cartesian robot, a filler (with a magnetic valve) attached to the Cartesian robot and a conveyor belt. The machine is configured such that: 1) once the optical sensor at the start of the belt detects an item, the magnetic valve of the filler opens and the Cartesian robot starts to move along the X axis (at the speed of the belt) above the item. 2) Once a preconfigured amount of product has been poured by the filler, the valve closes and the robot returns to its initial X coordinate at maximum speed while the item keeps moving towards the end of the conveyor." ;
    # Security level to interact with the Thing
    td:hasSecurityConfiguration [
        a wotsec:NoSecurityScheme
    ] ;
    # Affordances of the Thing (one per OPC UA variable) -- an affordance is a "possible interaction" with the Thing
    td:hasPropertyAffordance [
        a td:PropertyAffordance, jsonschema:NumberSchema ;
        td:name "I0.1" ;
        dct:title "I0.1" ;
        dct:description "Axe sous puissance" ;
        jsonschema:readOnly false ;
        jsonschema:writeOnly false ;
        td:isObservable false ;
        # Web forms to interact with the Thing's property, one for each operation type: readProperty, writeProperty
        td:hasForm [
            a hctl:Form ;
            http:methodName "GET" ;
            hctl:forContentType "application/json" ;
            hctl:hasOperationType td:readProperty ;
            hctl:hasTarget <http://localhost:3001/ns=2;s=ITm Factory._Statistics._FailedReads>
        ], [
            a hctl:Form ;
            http:methodName "PUT" ;
            hctl:forContentType "application/json" ;
            hctl:hasOperationType td:writeProperty ;
            hctl:hasTarget <http://localhost:3001/I0.1>
        ]
    ], [
        a td:PropertyAffordance, jsonschema:NumberSchema ;
        td:name "Q0.2" ;
        dct:title "Q0.2" ;
        dct:description "Mise sous puissance" ;
        jsonschema:readOnly false ;
        jsonschema:writeOnly false ;
        td:isObservable false ;
        td:hasForm [
            a hctl:Form ;
            http:methodName "GET" ;
            hctl:forContentType "application/json" ;
            hctl:hasOperationType td:readProperty ;
            hctl:hasTarget <http://localhost:3001/Q0.2>
        ], [
            a hctl:Form ;
            http:methodName "PUT" ;
            hctl:forContentType "application/json" ;
            hctl:hasOperationType td:writeProperty ;
            hctl:hasTarget <http://localhost:3001/Q0.2>
        ]
    ] .
    # ... TODO other affordances to add for every OPC UA variable of interest
